<script th:inline="javascript">
/*<![CDATA[*/
var specIndex = [[${specIndex}]];
var robotInfos = /*[[${robotInfos}]]*/ [];
var codeOfFirstRobot = 'defaultCode'; // 기본 코드 설정
if (robotInfos.length > 0) {
  codeOfFirstRobot = robotInfos[specIndex].code; // 0번 인덱스의 코드로 설정
}

let selectedDeck = specIndex;
let editor;

require.config({ paths: { 'vs': 'https://unpkg.com/monaco-editor@latest/min/vs' } });
require(["vs/editor/editor.main"], function () {
    editor = monaco.editor.create(document.getElementById('container-body'), {
      value: codeOfFirstRobot,
      language: 'java',
      theme: 'vs-dark',
      automaticLayout: true,
      fontSize: 20,
      minimap: {

        enabled: false,
    },
        wordWrap: "on"
    });
});
/*]]>*/

// play battle
// playBattle(specIndex);

function getEditorValue() {
    if (editor) {
        const content = editor.getValue();// Display the content, you can do whatever you want with it
        return content;
    }
}

function code_check(result, status, index, code) {
    const terminal = document.getElementById('terminal');
    
    if (result != 0) {
            
        const firstError = status.split('\n')[0];
        const translatedError = translateErrorToKorean(firstError);
        console.log(firstError)
        terminal.innerHTML = `<span class="terminal-error">${translatedError}: ${result}</span>`;

    } else {
        terminal.innerHTML = `<span class="terminal-success">컴파일 성공!</span>`;
        robotInfos[index] = code;
    }
    }


    function selectDeckIndex(deckId) {
        selectedDeck = deckId;
        if(robotInfos[selectedDeck]){
            editor.setValue(robotInfos[selectedDeck].code)
            console.log(selectedDeck);
        } else {
            console.log('No robot info found for selected deck.')
        }
    }

    function run_code() {
        change_code(selectedDeck, getEditorValue());
    }

    function translateErrorToKorean(status) {
                // 간단한 예제로 에러 메시지를 한국어로 번역하는 함수
                // 필요한 만큼 메시지를 추가하거나 수정할 수 있습니다.
                // const errorTranslations = {
                //     "reached end of file while parsing" : `컴파일 오류: !`,
                //     "cannot find sym   bol" : `메서드나 속성을 찾을 수 없습니다: !`
                // };
                // if (errorTranslations.hasOwnProperty(status)) {
                //     return errorTranslations[status] + status;
                // } else {
        return "컴파일 에러:" + status;
    }

}


</script>